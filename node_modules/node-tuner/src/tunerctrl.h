// (c) 2016 Fraunhofer Institute for Open Communication Systems (FOKUS)
// See LICENSE.md for more information
//

 #ifndef TUNERCTRL_H_
 #define TUNERCTRL_H_

#include <stdio.h>
#include <errno.h>
#include <time.h>
#include <sys/types.h>
#include <stdint.h>
#include <linux/dvb/frontend.h>
#include <linux/dvb/version.h>

#define DVB_API ( 10 * DVB_API_VERSION + DVB_API_VERSION_MINOR )

/******************************************************************************
 * definitions which are missing in <linux/dvb/frontend.h>
 *
 *****************************************************************************/

#ifndef fe_polarization // 300468 v181  6.2.13.2 Satellite delivery system descriptor
typedef enum fe_polarization {
        POLARIZATION_HORIZONTAL,
        POLARIZATION_VERTICAL,
        POLARIZATION_CIRCULAR_LEFT,
        POLARIZATION_CIRCULAR_RIGHT,
} fe_polarization_t;
#endif

#ifndef fe_west_east_flag       // 300468 v181  6.2.13.2 Satellite delivery system descriptor
typedef enum fe_west_east_flag {
        EAST_FLAG,
        WEST_FLAG,
} fe_west_east_flag_t;
#endif

#ifndef fe_interleave   // 300468 v181  6.2.13.4 Terrestrial delivery system descriptor
typedef enum fe_interleaver {
        INTERLEAVE_NATIVE,
        INTERLEAVE_IN_DEPTH,
        INTERLEAVE_AUTO,
} fe_interleave_t;
#endif

#ifndef fe_alpha        // 300468 v181  6.2.13.4 Terrestrial delivery system descriptor
typedef enum fe_alpha {
        ALPHA_1,
        ALPHA_2,
        ALPHA_4,
        ALPHA_AUTO,
} fe_alpha_t;
#endif

typedef enum fe_siso_miso {
        SISO,
        MISO,
        SISO_MISO_RESERVED1,
        SISO_MISO_RESERVED2,
} fe_siso_miso_t;

#ifndef SYS_DVBC2                              //// \BEGIN   FIX_ME: _REALLY_ DIRTY HACK. JUST FOR TESTING THIS CODE. REMOVE LATER!!!!!
#define SYS_DVBC2 (63U)  /* max value in use: 18U */
#ifndef QAM_512
#define QAM_512   (61U)  /* max value in use: 13U */
#endif
#ifndef QAM_1024
#define QAM_1024  (62U)  /* max value in use: 13U */
#endif
#ifndef QAM_4096
#define QAM_4096  (63U)  /* max value in use: 13U */
#endif
#ifndef GUARD_INTERVAL_1_64
#define GUARD_INTERVAL_1_64 (127U) /* max value in use: 10U */
#endif
#endif                                         //// \END     REMOVE UP TO HERE!!!

#ifndef SYS_TURBO  // remove later.
#define SYS_TURBO (SYS_DVBT2 + 1) /* correct in any case. */
#endif

#ifndef DTV_ENUM_DELSYS // remove later.
#define DTV_ENUM_DELSYS 44
#endif

#if !defined DTV_STREAM_ID && defined DTV_DVBT2_PLP_ID
#define DTV_STREAM_ID DTV_DVBT2_PLP_ID
#endif

typedef enum {
        DATA_SLICE_TUNING_FREQUENCY,
        C2_SYSTEM_CENTER_FREQUENCY,
        INITIAL_TUNING_FOR_STATIC_DATA_SLICE,
} fe_frequency_type_t;

typedef enum {
        FFT_4K_8MHZ,
        FFT_4K_6MHZ,
} fe_ofdm_symbol_duration_t;

/* don't use FE_OFDM, FE_QAM, FE_QPSK, FE_ATSC any longer.
 *
 * With evolving delivery systems, cable uses also ofdm (DVB-C2), satellites doesnt
 * use only qpsk (DVB-S2), 2nd gen terrestrial and cable use physical layer pipes.
 * Use of delivery_system doesnt fit for me either, since i dont want to distinguish
 * between DVB-S <-> DVB-S2 or DVB-C <-> DVB-C2 or DVB-T <-> DVB-T2.
 * Therefore, name it on physical path for now.
 * 20120107 wirbel
 */
typedef enum {
        SCAN_UNDEFINED,
        SCAN_SATELLITE,
        SCAN_CABLE,
        SCAN_TERRESTRIAL,
        SCAN_TERRCABLE_ATSC,   /* I dislike this mixture of terr and cable. fix later, as it leads to problems now. */
} scantype_t;

struct transponder {
  /*----------------------------*/
  void *   prev;
  void *   next;
  uint32_t index;
  /*----------------------------- starting from here copied by 'copy_fe_params' ------------------------------------------*/
  /* NOTE: 'frequency' needs to be first item - dont touch!                                                               */
  uint32_t frequency;                                        /* unit Hz, except satellite: kHz                      1..4  */
  fe_spectral_inversion_t    inversion                   :8; /*                                                     5     */
  uint32_t                   symbolrate;                     /* symbols per second                                  6..9  */
  uint32_t                   bandwidth;                      /* Hz                                                  10..13*/
  uint16_t                   orbital_position;               /* 0x0000-0x1800                                       14..15*/
  uint8_t                    input_stream_identifier;        /* ISI 8bit.                                           16    */
  fe_delivery_system_t       delsys                      :6; /*                               0..18 -> 5 -> 6 (63)  17    */
  fe_polarization_t          polarization                :2; /* H,V,L,R                       0..3  -> 2 -> 2 (3)   17    */
  fe_modulation_t            modulation                  :6; /*                               0..13 -> 4 -> 6 (63)  18    */
  fe_pilot_t                 pilot                       :2; /* pilot, on, off, auto          0..2  -> 2 -> 2 (3)   18    */
  fe_code_rate_t             coderate                    :7; /* code rate                     0..12 -> 4 -> 7 (127) 19    */
  fe_code_rate_t             coderate_LP                 :7; /* code rate low priority stream 0..12 -> 4 -> 7 (127) 19..20*/
  fe_guard_interval_t        guard                       :7; /*                               0..10 -> 4 -> 7 (127) 20..21*/
  fe_rolloff_t               rolloff                     :3; /* 0.35, 0.25, 0.20, auto        0..3  -> 2 -> 3 (7)   21    */
  fe_transmit_mode_t         transmission                :7; /*                               0..8  -> 4 -> 7 (127) 22    */
  fe_west_east_flag_t        west_east_flag              :1; /* east, west                    0..1  -> 1 -> 1 (1)   22    */
  fe_hierarchy_t             hierarchy                   :4; /*                               0..4  -> 3 -> 4 (15)  23    */
  unsigned                   time_slicing                :2; /* only defined in w_scan.       0..2  -> 2 -> 2 (3)   23    */
  unsigned                   scrambling_sequence_index   :18;/* not yet in use.                                     23..25*/
  unsigned                   scrambling_sequence_selector:1; /* on/off                        0..1  -> 1            26    */
  unsigned                   multiple_input_stream_flag  :1; /* on/off                        0..1  -> 1            26    */
  fe_frequency_type_t        C2_tuning_frequency_type    :2; /* 0..2                          0..2  -> 2 -> 2 (3)   26    */
  fe_ofdm_symbol_duration_t  active_OFDM_symbol_duration :2; /*                                                     26    */
  fe_alpha_t                 alpha                       :2; /* only defined in w_scan                              26    */
  fe_interleave_t            terr_interleaver            :2; /* only defined in w_scan                              27    */
  unsigned                   priority                    :1; /* only defined in w_scan                              27    */
  unsigned                   mpe_fec                     :1; /*                                                     27    */
  unsigned                   extended_info               :1; /*                                                     27    */
  unsigned                   SISO_MISO                   :1; /* 1 = multiple input single output                    27    */
  unsigned                   locks_with_params           :1; /* do we get lock with current tp params?              27    */
  unsigned                   reserved_byte27             :1; /* align to byte.                                      27    */
  unsigned                   tfs_flag                    :1; /* 1 if Time-Frequency-Slicing                         28    */
  unsigned                   other_frequency_flag        :1; /* DVB-T/T2                                            28    */
  unsigned                   last_tuning_failed          :1; /*                                                     28    */
  unsigned                   type                        :5; /* 3bit + 2bit byte_align                              28    */
  uint32_t                   source;                         /*                                                     29..32*/
  uint16_t                   system_id;                      /* DVB-C2, DVB-T2 system_id                            33..34*/
  uint8_t                    plp_id;                         /* DVB-C2, DVB-T2                                      35    */
  uint8_t                    data_slice_id;                  /* DVB-C2                                              36    */
  /*---------------------------- below is not copied by 'copy_fe_params' -------------------------------------------------*/
  uint8_t private_from_here;
  /*----------------------------*/
  uint16_t network_PID;                   // which PID contains NIT ? (0x0010..0x1FFE)
  uint16_t network_id;
  uint16_t original_network_id;
  uint16_t transport_stream_id;
  /*----------------------------*/
  char * network_name;
} __attribute__((packed))  transponder_t, * p_transponder_t;


#ifndef dvb_device_type
typedef enum dvb_device_type {
        FRONTEND,
        DEMUX,
        DVR
} dvb_device_type_t;
#endif

int open_device(int adapter, dvb_device_type_t type, int device, int flags);
int close_device(int fd);
int get_info(int frontend_fd, struct dvb_frontend_info * fe_info);
int set_frontend(int frontend_fd, struct transponder * t);
int check_frontend(int fd, fe_status_t * status);
int start_stream(int fd);
int stop_stream(int fd);
int get_props(int fd, int * sgnl, int * sgnldB, int * cnr, int * cnrdB,
  int * preErrorBitCount, int * preTotalBitCount,
  int * postErrorBitCount, int * postTotalBitCount,
  int * errorBlockCount, int * errorTotalCount);


#endif
